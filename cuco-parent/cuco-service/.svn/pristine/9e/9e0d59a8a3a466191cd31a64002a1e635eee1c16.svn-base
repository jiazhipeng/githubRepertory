package cn.cuco.service.basic.impl;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import cn.cuco.dao.BasicRestrictionMapper;
import cn.cuco.entity.BasicRestriction;
import cn.cuco.service.basic.BasicRestrictionService;

@Service(value = "basicRestrictionService")
public class BasicRestrictionServiceImpl implements BasicRestrictionService {

    @Autowired
    private BasicRestrictionMapper<BasicRestriction> basicRestrictionMapper;
    
    @Override
    public Integer insertSelective(BasicRestriction basicRestriction) throws Exception {
           return this.basicRestrictionMapper.insertSelective(basicRestriction);
        }

    @Override
    public Integer insertBatch(List<BasicRestriction> basicRestriction) throws Exception {
           return this.basicRestrictionMapper.insertBatch(basicRestriction) ;
        }

    @Override
    public Integer deleteByPrimaryKey(Object id) {
            return this.basicRestrictionMapper.deleteByPrimaryKey(id);
    }

    public Integer deleteBatchByPrimaryKey(List<Object> ids) {
           return this.basicRestrictionMapper.deleteBatchByPrimaryKey(ids);
    }

    @Override
    public Integer updateByPrimaryKeySelective(BasicRestriction basicRestriction) {
           return this.basicRestrictionMapper.updateByPrimaryKeySelective(basicRestriction);
    }

    @Override
    public BasicRestriction findById(Object id) {
           return (BasicRestriction) this.basicRestrictionMapper.selectByPrimaryKey(id);
    }

    @Override
    public List<BasicRestriction> selectByCondition(BasicRestriction basicRestriction) {
           return (List<BasicRestriction>) this.basicRestrictionMapper.selectByCondition(basicRestriction);
    }

    @Override
    public Integer selectCountByCondition(BasicRestriction basicRestriction) {
           return  this.basicRestrictionMapper.selectCountByCondition(basicRestriction);
    }

}
