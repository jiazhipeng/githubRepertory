package cn.cuco.service.basic.impl;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import cn.cuco.dao.InsuranceSubjectsMapper;
import cn.cuco.entity.InsuranceSubjects;
import cn.cuco.service.basic.InsuranceSubjectsService;

@Service(value = "insuranceSubjectsService")
public class InsuranceSubjectsServiceImpl implements InsuranceSubjectsService {

    @Autowired
    private InsuranceSubjectsMapper<InsuranceSubjects> insuranceSubjectsMapper;
    
    @Override
    public Integer insertSelective(InsuranceSubjects insuranceSubjects) throws Exception {
           return this.insuranceSubjectsMapper.insertSelective(insuranceSubjects);
        }

    @Override
    public Integer insertBatch(List<InsuranceSubjects> insuranceSubjects) throws Exception {
           return this.insuranceSubjectsMapper.insertBatch(insuranceSubjects) ;
        }

    @Override
    public Integer deleteByPrimaryKey(Object id) {
            return this.insuranceSubjectsMapper.deleteByPrimaryKey(id);
    }

    public Integer deleteBatchByPrimaryKey(List<Object> ids) {
           return this.insuranceSubjectsMapper.deleteBatchByPrimaryKey(ids);
    }

    @Override
    public Integer updateByPrimaryKeySelective(InsuranceSubjects insuranceSubjects) {
           return this.insuranceSubjectsMapper.updateByPrimaryKeySelective(insuranceSubjects);
    }

    @Override
    public InsuranceSubjects findById(Object id) {
           return (InsuranceSubjects) this.insuranceSubjectsMapper.selectByPrimaryKey(id);
    }

    @Override
    public List<InsuranceSubjects> selectByCondition(InsuranceSubjects insuranceSubjects) {
           return (List<InsuranceSubjects>) this.insuranceSubjectsMapper.selectByCondition(insuranceSubjects);
    }

    @Override
    public Integer selectCountByCondition(InsuranceSubjects insuranceSubjects) {
           return  this.insuranceSubjectsMapper.selectCountByCondition(insuranceSubjects);
    }

}
